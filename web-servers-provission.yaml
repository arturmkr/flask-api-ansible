- hosts: flask_api_backend
  vars_files:
    - "./vars/vault.yml"
  remote_user: "{{ default_remote_user }}"
  # become: true

  tasks:
    - name: Update all packages
      become: true
      apt:
        update_cache: yes
        name: "*"
        state: latest

    - name: Install dependencies
      become: true
      apt:
        pkg:
          - git
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - htop

    - name: Add Docker GPG apt Key
      become: true
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
        keyring: /etc/apt/trusted.gpg.d/docker.gpg

    - name: Add Docker Repository
      become: true
      apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        filename: docker

    - name: Install Docker
      become: true
      apt:
        update_cache: true
        pkg:
          - docker-ce
          - docker-ce-cli 
          - containerd.io
          - docker-compose-plugin
          - docker-compose

    - name: Add user to docker group
      become: true
      user:
        name: "{{ default_remote_user }}"
        groups: docker
        append: yes

    - name: Reconnet to SSH
      meta:
        reset_connection

    - name: Upload SSH key
      copy:
        src: "{{ git_deploy_key_path }}"
        dest: "~/.ssh/github"
        mode: "0600"
        force: yes

    - name: Clone app repository
      git:
        repo: "{{ flask_api_repo }}"
        dest: "{{ flask_remote_path }}"
        key_file: "~/.ssh/github"
        accept_newhostkey: yes
        clone: yes 

    - name: Copy env variables
      copy:
        src: ".env"
        dest: "{{ flask_remote_path }}/.env"
        force: yes
        mode: "755"

    - name: Tear down existing services
      community.docker.docker_compose:
        project_src: "{{ flask_remote_path }}"
        state: absent

    - name: Create and start services
      community.docker.docker_compose:
        project_src: "{{ flask_remote_path }}"
        state: present